{"ast":null,"code":"const API_URL = 'http://localhost:5000/houses'; // URL for the json-server endpoint\n\nexport const getHouses = async (searchQuery = '') => {\n  try {\n    const url = `${API_URL}?q=${encodeURIComponent(searchQuery)}`;\n    console.log('Fetching houses from:', url); // Debugging log\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Failed to fetch houses from the database.');\n    }\n    const houses = await response.json();\n    return houses;\n  } catch (error) {\n    console.error('Error fetching houses:', error);\n    throw error;\n  }\n};\nexport const getHouseById = async id => {\n  try {\n    const response = await fetch(`${API_URL}/${id}`); // Use /houses/:id instead of ?id=\n    if (!response.ok) {\n      throw new Error(`Failed to fetch house with ID ${id}.`);\n    }\n    const house = await response.json();\n    return house;\n  } catch (error) {\n    console.error('Error fetching house by ID:', error);\n    throw error;\n  }\n};\nexport const createHouse = async newHouse => {\n  try {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newHouse)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create a new house.');\n    }\n    const createdHouse = await response.json();\n    return createdHouse;\n  } catch (error) {\n    console.error('Error creating house:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","getHouses","searchQuery","url","encodeURIComponent","console","log","response","fetch","ok","Error","houses","json","error","getHouseById","id","house","createHouse","newHouse","method","headers","body","JSON","stringify","createdHouse"],"sources":["/home/fullscale/Projects/react_fundamentals/house-listing-app/src/services/houseService.ts"],"sourcesContent":["import { House } from '../types/House';\n\nconst API_URL = 'http://localhost:5000/houses'; // URL for the json-server endpoint\n\nexport const getHouses = async (searchQuery: string = ''): Promise<House[]> => {\n    try {\n        const url = `${API_URL}?q=${encodeURIComponent(searchQuery)}`;\n        console.log('Fetching houses from:', url); // Debugging log\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error('Failed to fetch houses from the database.');\n        }\n        const houses: House[] = await response.json();\n        return houses;\n    } catch (error) {\n        console.error('Error fetching houses:', error);\n        throw error;\n    }\n};\n\nexport const getHouseById = async (id: number): Promise<House | undefined> => {\n    try {\n        const response = await fetch(`${API_URL}/${id}`); // Use /houses/:id instead of ?id=\n        if (!response.ok) {\n            throw new Error(`Failed to fetch house with ID ${id}.`);\n        }\n        const house: House = await response.json();\n        return house;\n    } catch (error) {\n        console.error('Error fetching house by ID:', error);\n        throw error;\n    }\n};\n\nexport const createHouse = async (newHouse: Omit<House, 'id'>): Promise<House> => {\n    try {\n        const response = await fetch(API_URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newHouse),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to create a new house.');\n        }\n        const createdHouse: House = await response.json();\n        return createdHouse;\n    } catch (error) {\n        console.error('Error creating house:', error);\n        throw error;\n    }\n};"],"mappings":"AAEA,MAAMA,OAAO,GAAG,8BAA8B,CAAC,CAAC;;AAEhD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,WAAmB,GAAG,EAAE,KAAuB;EAC3E,IAAI;IACA,MAAMC,GAAG,GAAG,GAAGH,OAAO,MAAMI,kBAAkB,CAACF,WAAW,CAAC,EAAE;IAC7DG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,GAAG,CAAC,CAAC,CAAC;IAC3C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,CAAC;IACjC,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;IAChE;IACA,MAAMC,MAAe,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC7C,OAAOD,MAAM;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,EAAU,IAAiC;EAC1E,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,IAAIe,EAAE,EAAE,CAAC,CAAC,CAAC;IAClD,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,iCAAiCK,EAAE,GAAG,CAAC;IAC3D;IACA,MAAMC,KAAY,GAAG,MAAMT,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC1C,OAAOI,KAAK;EAChB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAOC,QAA2B,IAAqB;EAC9E,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAACR,OAAO,EAAE;MAClCmB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;IACjC,CAAC,CAAC;IACF,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IACpD;IACA,MAAMc,YAAmB,GAAG,MAAMjB,QAAQ,CAACK,IAAI,CAAC,CAAC;IACjD,OAAOY,YAAY;EACvB,CAAC,CAAC,OAAOX,KAAK,EAAE;IACZR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}