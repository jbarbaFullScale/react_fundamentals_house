{"ast":null,"code":"var _jsxFileName = \"/home/fullscale/Projects/react_fundamentals/house-listing-app/src/pages/HouseDetailsPage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport HouseDetails from '../components/HouseDetails';\nimport { getHouseById } from '../services/houseService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Import the House type\n\nconst HouseDetailsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [house, setHouse] = React.useState(null); // Properly type the house state\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState('');\n  React.useEffect(() => {\n    const fetchHouseDetails = async () => {\n      try {\n        debugger;\n        if (id) {\n          const fetchedHouse = await getHouseById(Number(id)); // Convert id to a number\n          if (fetchedHouse) {\n            setHouse(fetchedHouse);\n          }\n        } else {\n          setError('Invalid house ID');\n        }\n      } catch (err) {\n        setError('Failed to fetch house details');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHouseDetails();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: house ? /*#__PURE__*/_jsxDEV(HouseDetails, {\n      house: house\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"House not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 55\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(HouseDetailsPage, \"gaHiAuj/cx+bfyNoCnqEwUcwzOw=\", false, function () {\n  return [useParams];\n});\n_c = HouseDetailsPage;\nexport default HouseDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"HouseDetailsPage\");","map":{"version":3,"names":["React","useParams","HouseDetails","getHouseById","jsxDEV","_jsxDEV","HouseDetailsPage","_s","id","house","setHouse","useState","loading","setLoading","error","setError","useEffect","fetchHouseDetails","fetchedHouse","Number","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/fullscale/Projects/react_fundamentals/house-listing-app/src/pages/HouseDetailsPage.tsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport HouseDetails from '../components/HouseDetails';\nimport { getHouseById } from '../services/houseService';\nimport { House } from '../types/House'; // Import the House type\n\nconst HouseDetailsPage: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const [house, setHouse] = React.useState<House | null>(null); // Properly type the house state\n    const [loading, setLoading] = React.useState<boolean>(true);\n    const [error, setError] = React.useState<string>('');\n\n    React.useEffect(() => {\n        const fetchHouseDetails = async () => {\n            try {\n                debugger;\n                if (id) {\n                    const fetchedHouse = await getHouseById(Number(id)); // Convert id to a number\n                    if (fetchedHouse) {\n                        setHouse(fetchedHouse);\n                    }\n                } else {\n                    setError('Invalid house ID');\n                }\n            } catch (err) {\n                setError('Failed to fetch house details');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchHouseDetails();\n    }, [id]);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    return (\n        <div>\n            {house ? <HouseDetails house={house} /> : <div>House not found</div>}\n        </div>\n    );\n};\n\nexport default HouseDetailsPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,YAAY,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChB;;AAExC,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAiB,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAe,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,KAAK,CAACW,QAAQ,CAAU,IAAI,CAAC;EAC3D,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACW,QAAQ,CAAS,EAAE,CAAC;EAEpDX,KAAK,CAACgB,SAAS,CAAC,MAAM;IAClB,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA;QACA,IAAIT,EAAE,EAAE;UACJ,MAAMU,YAAY,GAAG,MAAMf,YAAY,CAACgB,MAAM,CAACX,EAAE,CAAC,CAAC,CAAC,CAAC;UACrD,IAAIU,YAAY,EAAE;YACdR,QAAQ,CAACQ,YAAY,CAAC;UAC1B;QACJ,CAAC,MAAM;UACHH,QAAQ,CAAC,kBAAkB,CAAC;QAChC;MACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;QACVL,QAAQ,CAAC,+BAA+B,CAAC;MAC7C,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDI,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAER,IAAII,OAAO,EAAE;IACT,oBAAOP,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIX,KAAK,EAAE;IACP,oBAAOT,OAAA;MAAAgB,QAAA,EAAMP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,oBACIpB,OAAA;IAAAgB,QAAA,EACKZ,KAAK,gBAAGJ,OAAA,CAACH,YAAY;MAACO,KAAK,EAAEA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGpB,OAAA;MAAAgB,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEd,CAAC;AAAClB,EAAA,CAzCID,gBAA0B;EAAA,QACbL,SAAS;AAAA;AAAAyB,EAAA,GADtBpB,gBAA0B;AA2ChC,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}